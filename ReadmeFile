# Install  2 node Kubernetes Cluster 

Pre-requisite for installation

Machine/server configuration for Kubernetes Cluster  
OS : Ubuntu 22.04 LTS 
CPU:  2 core or more 
memory:  4 GB RAM or more 
Disk :  30 GB  Or more 
Network: Bridge
passwordless Sudo access to user instllaing kubernetes cluster

Follow Steps below to install Kubernetes Cluster 

# Install Kubernetes Master 

 
1. Login to master node, clone this repo and run Script under "installation_scripts" folder of repository on worker node
  
     $ git clone https://github.com/cloud-dev-user/kubernetes_demo.git
     $ cd kubernetes_demo/installation_scripts

2. Update file "hostname.txt" with ip v4 address of master and worker node.  you can refer sample file in this repository.

    $ ./pre_configure_k8s_master.sh    # press "enter" key wherever prompted

3. Initiate Kubernetes Cluster on master node 

   $ sudo kubeadm init --control-plane-endpoint=k8smaster.ssktraining.com

   Wait till complete command is executed and copy the output to notepad.

4. Run Following commands on master node 

    $ mkdir -p $HOME/.kube
    $ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    $ sudo chown $(id -u):$(id -g) $HOME/.kube/config

5. Now, Login to Worker node, clone this repo and run Script under "installation_scripts" folder of repository on worker node
  $ git clone https://github.com/cloud-dev-user/kubernetes_demo.git
  $ cd kubernetes_demo/installation_scripts
  $ ./pre_configure_k8s_worker.sh    # press "enter" key wherever prompted

6.  Run the command on worker node. This 
   Note: below is sample command you will ge similar command in output of step 3, i.e. your " kubeadm init ...." command

   $ sudo kubeadm join k8smaster.ssktraining.com:6443 --token cw35sq.owyc84gqa1d1j43l \
        --discovery-token-ca-cert-hash sha256:8ecfc49173714c5991cfaeeb3ed90f44222cc7ac237a07afc2afe9716192b433

7.  On Master node,  Run following command to ccheck if worker node is added or not 

   $ kubectl get nodes
    sample output should look like below. 
     NAME                        STATUS     ROLES           AGE     VERSION
    k8smaster.ssktraining.com   NotReady   control-plane   9m28s   v1.27.3
    k8sworker.ssktraining.com   NotReady    none           1m20s   v1.27.3
    
8. Install CNI provider "calico" for pod network 

    $ kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml

9. Verify now all pods are in "running" state which are required for kubernetes cluster and then node are in "Ready" Status 

     $ kubectl get pods -n kube-system 
     $ kubectl get nodes 

Congratulations, your kubernetes cluster is ready for use.
